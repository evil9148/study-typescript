함수는 타입지정이 2곳에서 가능하다.
1. 함수로 들어오는 파라미터 값
2. 함수에서 나가는 리턴 값

function fn(x :(1)number) :(2)number { 
  return x * 2 
} 

(1) 함수로 들어오는 파라미터 값의 타입지정은 파라미터 옆에 타입을 입력하면 된다.
(2) 함수가 실행된 후 나오는 리턴 값의 타입 지정은 함수명() 우측에 입력하면 된다.
이렇게 타입을 지정하면 파라미터와 리턴 값이 숫자 외 다른 타입의 값이 오면 에러가 발생한다.
파라미터에 타입을 지정하면 함수사용시 필수로 파라미터 값을 입력해야 한다.

void type
void는 결과 값을 반환하지 않는 함수에 설정한다.  즉 return 할 값이 없는 함수의 타입으로 사용이 가능하다.

function fn(x :number) :void { 
  return x * 2 //에러발생
} 

return을 작성하면 에러가 발생하게 된다. 그래서 함수에 return 기능을 방지하고자 할 때 사용한다.



파라미터가 옵션일 경우
함수에 파라미터 자리를 만들었지만 파라미터 없이 함수를 사용할 경우가 있다.
그럴 때파라미터가 옵션이라고 정의를 해줘야 에러가 발생하지 않는다. 

function fn(x? :number) { 

}
fn(); //가능
fn(2); //가능


정의하는 방법은 파라미터 값 바로 우측에 물음표를 입력하면 된다. 그러면 함수를 사용할 때 파라미터 값을 입력하지 않아도 함수를
사용할 수 있다.
물음표는 x : number|undifined와 같은 의미이다. 파라미터가 정의되지 않으면 자동으로 undefined가 반영된다.


애플코딩 숙제 중 참고사항
함수에 숫자 또는 문자를 집어넣으면 자릿수를 세어 출력해주는 함수를 만들 때 글자의 자릿수를 세어주는 명령문은 length를 사용한다. 다만 숫자의 자릿수는 세어주지를 못하여 여기에 toString()을 사용하여 숫자를 문자로 변환한 뒤 length를 이용하여 숫자도 자릿수를 세어줄 수가 있다.

function count(x: string | number): string | number {
  return x.toString().length
}

console.log(count('54645'))





























